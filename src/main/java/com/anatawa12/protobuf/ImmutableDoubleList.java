/*
 * Generated by lists-generator.kts
 */

package com.anatawa12.protobuf;

import java.util.Collection;

public final class ImmutableDoubleList extends DoubleList {
    // Query Operations are implemented in DoubleList
    // Modification Operations are not allowed. throws UnsupportedOperationException

    public ImmutableDoubleList(DoubleList copyFrom) {
        // empty backed array is safe because can't add anything with this list
        super(copyFrom.size(), 0);
        super.addAll(copyFrom);
    }

    public static final ImmutableDoubleList EMPTY = new ImmutableDoubleList(new DoubleList());

    public static ImmutableDoubleList wrap(DoubleList list) {
        if (list == null) return EMPTY;
        if (list instanceof ImmutableDoubleList) return (ImmutableDoubleList) list;
        return new ImmutableDoubleList(list);
    }

    @Override
    public boolean add(double value) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean removeDouble(double value) {
        throw new UnsupportedOperationException();
    }

    public boolean addAll(double[] c) {
        throw new UnsupportedOperationException();
    }

    public boolean addAll(int index, double[] c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean addAll(Collection<? extends Double> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean addAll(int index, Collection<? extends Double> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean removeAll(Collection<?> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean retainAll(Collection<?> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public void clear() {
        throw new UnsupportedOperationException();
    }

    public double set(int index, double element) {
        throw new UnsupportedOperationException();
    }

    public void add(int index, double value) {
        throw new UnsupportedOperationException();
    }

    /**
     * You should use {@link DoubleList#add(int, double)}
     */
    @SuppressWarnings("deprecation")
    @Deprecated
    @Override
    public void add(int index, Double element) {
        throw new UnsupportedOperationException();
    }

    public double removeAt(int index) {
        throw new UnsupportedOperationException();
    }
}
