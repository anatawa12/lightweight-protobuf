/*
 * Generated by lists-generator.kts
 */

package com.anatawa12.protobuf;

import java.util.Collection;

public final class ImmutableFloatList extends FloatList {
    // Query Operations are implemented in FloatList
    // Modification Operations are not allowed. throws UnsupportedOperationException

    public ImmutableFloatList(FloatList copyFrom) {
        // empty backed array is safe because can't add anything with this list
        super(copyFrom.size(), 0);
        super.addAll(copyFrom);
    }

    public static final ImmutableFloatList EMPTY = new ImmutableFloatList(new FloatList());

    public static ImmutableFloatList wrap(FloatList list) {
        if (list == null) return EMPTY;
        if (list instanceof ImmutableFloatList) return (ImmutableFloatList) list;
        return new ImmutableFloatList(list);
    }

    @Override
    public boolean add(float value) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean removeFloat(float value) {
        throw new UnsupportedOperationException();
    }

    public boolean addAll(float[] c) {
        throw new UnsupportedOperationException();
    }

    public boolean addAll(int index, float[] c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean addAll(Collection<? extends Float> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean addAll(int index, Collection<? extends Float> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean removeAll(Collection<?> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean retainAll(Collection<?> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public void clear() {
        throw new UnsupportedOperationException();
    }

    public float set(int index, float element) {
        throw new UnsupportedOperationException();
    }

    public void add(int index, float value) {
        throw new UnsupportedOperationException();
    }

    /**
     * You should use {@link FloatList#add(int, float)}
     */
    @SuppressWarnings("deprecation")
    @Deprecated
    @Override
    public void add(int index, Float element) {
        throw new UnsupportedOperationException();
    }

    public float removeAt(int index) {
        throw new UnsupportedOperationException();
    }
}
