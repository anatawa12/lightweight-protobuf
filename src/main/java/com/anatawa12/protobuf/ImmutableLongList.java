/*
 * Generated by lists-generator.kts
 */

package com.anatawa12.protobuf;

import java.util.Collection;

public final class ImmutableLongList extends LongList {
    // Query Operations are implemented in LongList
    // Modification Operations are not allowed. throws UnsupportedOperationException

    public ImmutableLongList(LongList copyFrom) {
        // empty backed array is safe because can't add anything with this list
        super(copyFrom.size(), 0);
        super.addAll(0, copyFrom.backed);
    }

    public static final ImmutableLongList EMPTY = new ImmutableLongList(new LongList());

    public static ImmutableLongList wrap(LongList list) {
        if (list == null) return EMPTY;
        if (list instanceof ImmutableLongList) return (ImmutableLongList) list;
        return new ImmutableLongList(list);
    }

    @Override
    public boolean add(long value) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean removeLong(long value) {
        throw new UnsupportedOperationException();
    }

    public boolean addAll(long[] c) {
        throw new UnsupportedOperationException();
    }

    public boolean addAll(int index, long[] c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean addAll(Collection<? extends Long> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean addAll(int index, Collection<? extends Long> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean removeAll(Collection<?> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public boolean retainAll(Collection<?> c) {
        throw new UnsupportedOperationException();
    }

    @Override
    public void clear() {
        throw new UnsupportedOperationException();
    }

    public long set(int index, long element) {
        throw new UnsupportedOperationException();
    }

    public void add(int index, long value) {
        throw new UnsupportedOperationException();
    }

    /**
     * You should use {@link LongList#add(int, long)}
     */
    @SuppressWarnings("deprecation")
    @Deprecated
    @Override
    public void add(int index, Long element) {
        throw new UnsupportedOperationException();
    }

    public long removeAt(int index) {
        throw new UnsupportedOperationException();
    }
}
